name: CI/CD Pipeline for Bhrigu.ai

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

env:
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  GUEST_IMAGE_NAME: bhrigu-guest
  PRO_IMAGE_NAME: bhrigu-pro

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'
        
    - name: Install dependencies for Guest
      run: |
        cd guest
        pip install -r requirements.txt
        pip install pytest pytest-html
    
    - name: Install dependencies for Pro
      run: |
        cd pro
        pip install -r requirements.txt
        pip install pytest pytest-html
        
    - name: Run Guest Tests
      run: |
        cd guest
        python -m pytest tests/test.py -v --html=test-results.html || echo "GUEST_TESTS_FAILED=true" >> $GITHUB_ENV
      continue-on-error: true
        
    - name: Run Pro Tests
      run: |
        cd pro
        python -m pytest tests/test.py -v --html=test-results.html || echo "PRO_TESTS_FAILED=true" >> $GITHUB_ENV
      continue-on-error: true
      
    - name: Generate Test Summary
      run: |
        cd guest
        python generate_test_summary.py
      
    - name: Upload test results
      uses: actions/upload-artifact@v2
      with:
        name: test-results
        path: |
          guest/test-results.html
          pro/test-results.html
          
    - name: Check test results
      if: env.GUEST_TESTS_FAILED == 'true' || env.PRO_TESTS_FAILED == 'true'
      run: |
        echo "Tests failed!"
        exit 1
  
  build:
    name: Build and Push Docker Images
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ env.DOCKER_HUB_USERNAME }}
        password: ${{ env.DOCKER_HUB_ACCESS_TOKEN }}
        
    - name: Build and push Guest image
      uses: docker/build-push-action@v2
      with:
        context: ./guest
        push: true
        tags: ${{ env.DOCKER_HUB_USERNAME }}/${{ env.GUEST_IMAGE_NAME }}:latest
        
    - name: Build and push Pro image
      uses: docker/build-push-action@v2
      with:
        context: ./pro
        push: true
        tags: ${{ env.DOCKER_HUB_USERNAME }}/${{ env.PRO_IMAGE_NAME }}:latest
        
  deploy:
    name: Deploy to Kubernetes (Minikube)
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Install kubectl
      uses: kubernetes-sigs/setup-kubectl@v1
      
    - name: Setup Minikube
      uses: medyagh/setup-minikube@master
      
    - name: Update deployment files
      run: |
        sed -i "s|image:.*bhrigu-guest.*|image: ${{ env.DOCKER_HUB_USERNAME }}/${{ env.GUEST_IMAGE_NAME }}:latest|g" k8s/deployment.yaml
        sed -i "s|image:.*bhrigu-pro.*|image: ${{ env.DOCKER_HUB_USERNAME }}/${{ env.PRO_IMAGE_NAME }}:latest|g" k8s/deployment.yaml
      
    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f k8s/pvcs.yaml
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml
        kubectl apply -f k8s/ingress.yaml

    - name: Verify deployment
      run: |
        kubectl get pods
        kubectl get services
        kubectl get ingress